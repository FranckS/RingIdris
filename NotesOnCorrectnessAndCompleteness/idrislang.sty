%% --------------------------------------------------- [ Idris Styling Package ]
%%
%% A set of LaTeX macros and styling for working with Idris in LaTeX
%%
%%   + Provides a listings bindings:
%%      + idris         :: default ascii
%%      + literateidris :: convert ascii maths to math symbols.
%%   + Defines a `numbers' and `default' listings style.
%%   + Defines a `code' environment for typesetting idris.
%%      + \begin{code}[...] ... \end{code}
%%   + Defines an input command for externally defined idris files.
%%      + \inputIdrisListing[...]{file.idr}
%%   + Defines commands typesetting the name Idris.
%%      + \Idris{}
%%      + \idris{}
%%
%% Options:
%%    - literate :: turn on literate idris for code environments.
%%    - numbers  :: turn on numbers for code environments.
%%
%% ----------------------------------------------------------- [ Begin Package ]
\ProvidesPackage{idrislang}

\RequirePackage{ifthen}
\RequirePackage{listings}
\RequirePackage{xspace}
\RequirePackage{textcomp}
%% ----------------------------------------------------------------- [ Options ]
\newboolean{literate}
\setboolean{literate}{false}
\newboolean{numbers}
\setboolean{numbers}{false}

\DeclareOption{literate}{%
  \setboolean{literate}{true}
}

\DeclareOption{numbers}{%
  \setboolean{numbers}{true}
}

\ProcessOptions\relax

%% ---------------------------------------------------------------- [ Commands ]
\newcommand{\Idris}{\textsc{Idris}\xspace}
\newcommand{\idris}{\textsc{Idris}\xspace}

%% --------------------------------------------------- [ Define Idris Listings ]
\lstdefinelanguage{idris}{%
  sensitive,%
%% ----------------------------------------------------------- [ Default Style ]
  xleftmargin=0.0em,
  tabsize=2,
  upquote=true,
  basicstyle=\ttfamily,
  flexiblecolumns=false,
  commentstyle=\footnotesize\sffamily,
%% ---------------------------------------------------------------- [ Keywords ]
%% From Idris Parser and idris-mode and vimscript
  keywords={%
    abstract, attack, case, compute, do, dsl, else, exact, focus, if,
    import, in, infix, infixl, infixr, instance, intros, module,
    mutual, namespace, of, let, parameters, partial, pattern, prefix,
    private, public, refine, rewrite, solve, syntax, term, then,
    total, trivial, try, using, where, with
},
%% ------------------------------------------------------- [ Prelude Functions ]
  morekeywords={%
    class, data, instance, record, dsl, postulate, default, 
    lambda, variable, index_first, index_next
  },
%% ---------------------------------------------------------------- [ Comments ]
   morecomment=[l]--,%
   morecomment=[n]{\{-}{-\}}
}[keywords,comments,strings]%

%% ---------------------------------------- [ Define Idris with Literate Stuff ]
\lstdefinelanguage{literateidris}[]{idris}{
  literate= {+}{{$+$}}1
            {/}{{$/$}}1
            {*}{{$*$}}1
            {=}{{$=$}}1
            {>}{{$>$}}1
            {<}{{$<$}}1
            {gam}{{$\Gamma$}}1
            {\\}{{$\lambda$}}1
            {\\\\}{{\char`\\\char`\\}}1
            {->}{{$\rightarrow$}}2
            {>=}{{$\geq$}}2
            {<-}{{$\leftarrow$}}2
            {<=}{{$\leq$}}2
            {=>}{{$\Rightarrow$}}2 
            {==}{{$\equiv$}}2
            {\ .}{{$\circ$}}2
            {\ .\ }{{$\circ$}}2
            {>>}{{>>}}2
            {>>=}{{>>=}}2
            {|}{{$\mid$}}1,
}
%% -------------------------------------------------- [ Default Listings Style ]

\lstdefinestyle{default}{%
  basicstyle=\ttfamily
}
\lstdefinestyle{numbers}{%
  numbers=left,
  numbersep=10pt,
  numberstyle=\footnotesize\sffamily,
  frame=leftline
}

%% ------------------------------------------------------ [ A Code Environment ]
%% Replicate the existence of literate haskell code environments,
%% option to make pretty with numbers.
\lstnewenvironment{code}[1][]
    {\ifthenelse{\boolean{literate}}{%
        \lstset{language=literateidris}}{%
        \lstset{language=idris}}
        \ifthenelse{\boolean{numbers}}{%
          \lstset{style=numbers, #1}}{%
          \lstset{style=default, #1}}}{}
%% ---------------------------------------------------------- [ Input Listings ]
%% Command to add externally defined Idris code to the document.
\newcommand{\inputIdrisListing}[2][]{%
\begingroup
    \ifthenelse{\boolean{literate}}{%
      \lstset{language=literateidris}}{%
      \lstset{language=idris}}
    \ifthenelse{\boolean{numbers}}{%
      \lstset{style=numbers}}{%
      \lstset{style=default}}
    \lstinputlisting[#1]{#2}
\endgroup
}
\endinput
%% --------------------------------------------------------------------- [ EOF ]
